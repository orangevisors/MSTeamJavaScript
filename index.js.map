{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\n\nmetadata = {\n    systemName: \"MSTeamsJSSP\",\n    displayName: \"Microsoft Teams Connector\",\n    description: \"A connector for Microsoft Teams\"\n};\n\n// Constants\nconst baseUriEndpoint = \"https://graph.microsoft.com/v1.0\";\nconst baseUriEndpointBeta = \"https://graph.microsoft.com/beta\";\n\n//\n// Objects\n\nconst Team = \"team\";\nconst Channel = \"channel\";\nconst Tab = \"tab\";\nconst App = \"app\";\n\n//\n// Team\nconst TeamId = \"id\";\nconst TeamWeburl = \"weburl\";\nconst TeamDisplayName = \"displayName\";\nconst TeamCreationDate = \"creationDate\"\nconst TeamDescription = \"description\";\nconst TeamEmail = \"email\";\nconst TeamMailEnabled = \"mailEnabled\";\nconst TeamMailNickname = \"mailNickname\";\nconst TeamArchiveStatus = \"archiveStatus\";\nconst TeamOperationId = \"operationId\";\nconst TeamOperationType = \"operationType\";\nconst TeamLastActionDate = \"lastActionDate\";\nconst TeamAttemptsCount = \"attemptsCount\";\nconst TeamTargetResourceId = \"targetResourceId\";\nconst TeamTargetResourceLocation = \"targetResourceLocation\";\nconst TeamArchiveError = \"archiveError\";\nconst TeamUserPrincipalName = \"userPrincipalName\";\nconst TeamResourceProvisioningOptions = \"resourceProvisioningOptions\";\nconst TeamIsArchived = \"isArchived\";\nconst TeamIsSuccessful = \"isSuccessful\";\nconst TeamRequestStatusUrl = \"requestStatusUrl\";\nconst TeamMsAllowCreateUpdateChannels = \"msAllowCreateUpdateChannels\";\nconst TeamMsAllowDeleteChannels = \"msAllowDeleteChannels\";\nconst TeamMsAllowAddRemoveApps = \"msAllowAddRemoveApps\";\nconst TeamMsAllowCreateUpdateRemoveTabs = \"msAllowCreateUpdateRemoveTabs\";\nconst TeamMsAllowCreateUpdateRemoveConnectors = \"msAllowCreateUpdateRemoveConnectors\";\nconst TeamGsAllowCreateUpdateChannels = \"gsAllowCreateUpdateChannels\";\nconst TeamGsAllowDeleteChannels = \"gsAllowDeleteChannels\";\nconst TeamMsgAllowUserEditMessages = \"msgsAllowUserEditMessages\";\nconst TeamMsgAllowUserDeleteMessages = \"msgsAllowUserDeleteMessages\";\nconst TeamMsgAllowOwnerDeleteMessages = \"msgsAllowOwnerDeleteMessages\";\nconst TeamMsgAllowTeamMentions = \"msgsAllowTeamMentions\";\nconst TeamMsgAllowChannelMentions = \"msgsAllowChannelMentions\";\nconst TeamFsAllowGiphy = \"fsAllowGiphy\";\nconst TeamFsAllowStickersAndMemes = \"fsAllowStickersAndMemes\";\nconst TeamFsAllowCustomMemes = \"fsAllowCustomMemes\";\n\nconst TeamGet = \"get\";\nconst TeamCreate = \"create\";\nconst TeamAdd = \"add\"; //  not used\nconst TeamArchive = \"archive\";\nconst TeamUnarchive = \"unarchive\";\nconst TeamCheckStatus = \"checkStatus\"; // not used\nconst TeamAddMember = \"addMember\";\nconst TeamRemoveMember = \"removeMember\";\nconst TeamUpdate = \"update\";\nconst TeamClone = \"clone\";\nconst TeamAddOwner = \"addOwner\";\nconst TeamList = \"list\";\nconst TeamMyTeamsList = \"myTeamsList\";\n\nconst TeamArchiveOperationUrl = \"archiveOperationUrl\";\nconst TeamAddAsMemberAlso = \"addAsMemberAlso\"; //  not used\nconst TeamDisplayNameStartsWith = \"displayNameStartsWith\";\nconst TeamUserId = \"userId\";\n\n//\n// Channel\nconst ChannelId = \"id\";\nconst ChannelDisplayName = \"displayName\";\nconst ChannelDescription = \"description\";\nconst ChannelEmail = \"email\";\nconst ChannelWeburl = \"weburl\";\nconst ChannelIsSuccessful = \"isSuccessful\";\nconst ChannelTeamId = \"teamId\";\nconst ChannelMessageSubject = \"messageSubject\";\nconst ChannelMessageBody = \"messageBody\";\nconst ChannelMessageId = \"messageId\";\nconst ChannelMessageIsImportant = \"messageIsImportant\";\n\nconst ChannelGet = \"get\";\nconst ChannelList = \"list\";\nconst ChannelCreate = \"create\";\nconst ChannelDelete = \"delete\";\nconst ChannelUpdate = \"update\";\nconst ChannelSendMessage = \"sendMessage\";\nconst ChannelReplyMessage = \"replyMessage\";\n\n//\n// Tab\nconst TabId = \"id\";\nconst TabDisplayName = \"displayName\";\nconst TabWeburl = \"weburl\";\nconst TabConfigEntityId = \"configEntityId\";\nconst TabConfigContentUrl = \"configContentUrl\";\nconst TabConfigWebsiteUrl = \"configWebsiteUrl\";\nconst TabConfigRemoveUrl = \"configRemoveUrl\";\nconst TabTeamsAppAppId = \"teamsAppAppId\";\nconst TabTeamsAppExternalId = \"teamsAppExternalId\";\nconst TabTeamsAppAppDisplayName = \"teamsAppAppDisplayName\";\nconst TabTeamsAppDistMethod = \"teamsAppDistMethod\";\nconst TabSortOrderIndex = \"sortOrderIndex\";\nconst TabIsSuccessful = \"isSuccessful\";\nconst TabTeamId = \"teamId\";\nconst TabChannelId = \"channelId\";\n\nconst TabGet = \"get\";\nconst TabList = \"list\";\nconst TabCreateWordTab = \"createWordTab\";\nconst TabCreateExcelTab = \"createExcelTab\";\nconst TabCreatePowerPointTab = \"createPowerPointTab\";\nconst TabCreatePdfTab = \"createPdfTab\";\nconst TabCreateOneNoteTab = \"createOneNoteTab\";\nconst TabCreatePlannerTab = \"createPlannerTab\";\nconst TabCreateSharePointTab = \"createSharePointTab\";\nconst TabCreateMsFormsTab = \"createMsFormsTab\";\nconst TabCreateMsStreamTab = \"createStreamTab\";\nconst TabCreateWebsiteTab = \"createWebsiteTab\";\nconst TabCreateWikiTab = \"createWikiTab\";\nconst TabCreatePowerBiTab = \"createPowerBiTab\";\nconst TabCreateDocumentLibraryTab = \"createDocumentLibraryTab\";\nconst TabCreateCustomTab = \"createCustomTab\";\nconst TabDelete = \"delete\";\nconst TabUpdate = \"update\";\n\n//\n// App\nconst AppId = \"id\";\nconst AppTeamId = \"teamId\";\nconst AppDisplayName = \"displayName\";\nconst AppVersion = \"version\";\nconst AppTeamAppDefinitionId = \"teamsAppDefinitionId\";\nconst AppTeamsAppId = \"teamsAppId\";\n\nconst AppList = \"list\";\n\n//OnDescribe\nondescribe = function () {\n    postSchema({\n\n        objects: {\n            [Team]: {\n                displayName: \"Team\",\n                description: \"Team\",\n                properties: {\n                    [TeamId]: {\n                        displayName: \"Team Id\",\n                        type: \"string\"\n                    },\n                    [TeamWeburl]: {\n                        displayName: \"Web Url\",\n                        type: \"string\"\n                    },\n                    [TeamDisplayName]: {\n                        displayName: \"Display Name\",\n                        type: \"string\"\n                    },\n                    [TeamCreationDate]: {\n                        displayName: \"Created On\",\n                        type: \"string\"\n                    },\n                    [TeamDescription]: {\n                        displayName: \"Description\",\n                        type: \"string\"\n                    },\n                    [TeamEmail]: {\n                        displayName: \"Email\",\n                        type: \"string\"\n                    },\n                    [TeamMailEnabled]: {\n                        displayName: \"Mail Enabled\",\n                        type: \"boolean\"\n                    },\n                    [TeamMailNickname]: {\n                        displayName: \"Mail Nickname\",\n                        type: \"string\"\n                    },\n                    [TeamArchiveStatus]: {\n                        displayName: \"Archive Status\",\n                        type: \"string\"\n                    },\n                    [TeamOperationId]: {\n                        displayName: \"Operation Id\",\n                        type: \"string\"\n                    },\n                    [TeamOperationType]: {\n                        displayName: \"Operation Type\",\n                        type: \"string\"\n                    },\n                    [TeamLastActionDate]: {\n                        displayName: \"Last Action Date\",\n                        type: \"string\"\n                    },\n                    [TeamAttemptsCount]: {\n                        displayName: \"Attempts Count\",\n                        type: \"string\"\n                    },\n                    [TeamTargetResourceId]: {\n                        displayName: \"Target Resource Id\",\n                        type: \"string\"\n                    },\n                    [TeamTargetResourceLocation]: {\n                        displayName: \"Target Resource Location\",\n                        type: \"string\"\n                    },\n                    [TeamArchiveError]: {\n                        displayName: \"Error\",\n                        type: \"string\"\n                    },\n                    [TeamUserPrincipalName]: {\n                        displayName: \"User Principal Name\",\n                        type: \"string\"\n                    },\n                    [TeamResourceProvisioningOptions]: {\n                        displayName: \"Resource Provisioning Options\",\n                        type: \"string\"\n                    },\n                    [TeamIsArchived]: {\n                        displayName: \"Is Archived\",\n                        type: \"boolean\"\n                    },\n                    [TeamIsSuccessful]: {\n                        displayName: \"Is Successful\",\n                        type: \"boolean\"\n                    },\n                    [TeamRequestStatusUrl]: {\n                        displayName: \"Request Status Url\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsAllowCreateUpdateChannels]: {\n                        displayName: \"Allow create/update channels to members\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsAllowDeleteChannels]: {\n                        displayName: \"Allow delete channels to members\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsAllowAddRemoveApps]: {\n                        displayName: \"Allow add/remove apps to members\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsAllowCreateUpdateRemoveTabs]: {\n                        displayName: \"Allow create/update/remove tabs to members\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsAllowCreateUpdateRemoveConnectors]: {\n                        displayName: \"Allow create/update/remove connectors to members\",\n                        type: \"boolean\"\n                    },\n                    [TeamGsAllowCreateUpdateChannels]: {\n                        displayName: \"Allow create/update channels to guests\",\n                        type: \"boolean\"\n                    },\n                    [TeamGsAllowDeleteChannels]: {\n                        displayName: \"Allow delete channels to guests\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsgAllowUserEditMessages]: {\n                        displayName: \"Allow user to edit messages\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsgAllowUserDeleteMessages]: {\n                        displayName: \"Allow user to delete messages\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsgAllowOwnerDeleteMessages]: {\n                        displayName: \"Allow owner to delete messages\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsgAllowTeamMentions]: {\n                        displayName: \"Allow team mentions\",\n                        type: \"boolean\"\n                    },\n                    [TeamMsgAllowChannelMentions]: {\n                        displayName: \"Allow channel mentions\",\n                        type: \"boolean\"\n                    },\n                    [TeamFsAllowGiphy]: {\n                        displayName: \"Allow Giphy\",\n                        type: \"boolean\"\n                    },\n                    [TeamFsAllowStickersAndMemes]: {\n                        displayName: \"Allow stickers and memes\",\n                        type: \"boolean\"\n                    },\n                    [TeamFsAllowCustomMemes]: {\n                        displayName: \"Allow custom memes\",\n                        type: \"boolean\"\n                    }\n                },\n                methods: {\n                    [TeamGet]: {\n                        displayName: \"Get\",\n                        description: \"Retrieves the details of a Team\",\n                        type: \"read\",\n                        inputs: [TeamId],\n                        requiredInputs: [TeamId],\n                        outputs: [\n                            TeamId,\n                            TeamDisplayName,\n                            TeamCreationDate,\n                            TeamDescription,\n                            TeamEmail,\n                            TeamMailEnabled,\n                            TeamMailNickname,\n                            TeamWeburl,\n                            TeamArchiveStatus,\n                            TeamIsSuccessful\n                        ]\n                    },\n                    [TeamCreate]: {\n                        displayName: \"Create\",\n                        description: \"Creates a Team\",\n                        type: \"create\",\n                        inputs: [\n                            TeamDisplayName,\n                            TeamDescription,\n                            TeamMailEnabled,\n                            TeamMailNickname,\n                            TeamUserPrincipalName\n                        ],\n                        requiredInputs: [TeamDisplayName,\n                            TeamMailEnabled,\n                            TeamMailNickname\n                        ],\n                        outputs: [\n                            TeamId,\n                            TeamDisplayName,\n                            TeamCreationDate,\n                            TeamDescription,\n                            TeamEmail,\n                            TeamMailEnabled,\n                            TeamMailNickname,\n                            TeamWeburl,\n                            TeamIsSuccessful\n                        ]\n                    },\n                    // [TeamAdd]: {\n                    //     displayName: \"Add\",\n                    //     description: \"Adds a Team to an existing group\",\n                    //     type: \"create\",\n                    //     inputs: [TeamId,\n                    //         TeamUserPrincipalName\n                    //     ],\n                    //     outputs: [TeamId,\n                    //         TeamDisplayName,\n                    //         TeamCreationDate,\n                    //         TeamDescription,\n                    //         TeamEmail,\n                    //         TeamMailEnabled,\n                    //         TeamMailNickname,\n                    //         TeamWeburl,\n                    //         TeamIsSuccessful\n                    //     ]\n                    // },\n                    [TeamArchive]: {\n                        displayName: \"Archive\",\n                        description: \"Archives a Team (makes it read-only)\",\n                        type: \"execute\",\n                        inputs: [TeamId],\n                        requiredInputs: [TeamId],\n                        outputs: [TeamId,\n                            TeamRequestStatusUrl,\n                            TeamIsSuccessful\n                        ]\n                    },\n                    [TeamUnarchive]: {\n                        displayName: \"Unarchive\",\n                        description: \"Unarchives a Team\",\n                        type: \"execute\",\n                        inputs: [TeamId],\n                        requiredInputs: [TeamId],\n                        outputs: [TeamId,\n                            TeamRequestStatusUrl,\n                            TeamIsSuccessful\n                        ]\n                    },\n                    /*                     [TeamCheckStatus]: {\n                                            displayName: \"Check Status\",\n                                            description: \"Check the status of an Archive job.\",\n                                            type: \"execute\",\n                                            parameters: {\n                                                [TeamArchiveOperationUrl]: {\n                                                    displayName: \"Archive/Unarchive operation URL\",\n                                                    type: \"string\"\n                                                }\n                                            },\n                                            requiredParameters: [TeamArchiveOperationUrl],\n                                            outputs: [TeamOperationId,\n                                                TeamOperationType,\n                                                TeamCreationDate,\n                                                TeamArchiveStatus,\n                                                TeamLastActionDate,\n                                                TeamAttemptsCount,\n                                                TeamTargetResourceId,\n                                                TeamTargetResourceLocation,\n                                                TeamArchiveError\n                                            ]\n                                        }, */\n                    [TeamAddMember]: {\n                        displayName: \"Add Member\",\n                        description: \"Adds a member to a Team\",\n                        type: \"create\",\n                        inputs: [TeamId,\n                            TeamUserPrincipalName\n                        ],\n                        requiredInputs: [TeamId,\n                            TeamUserPrincipalName\n                        ],\n                        outputs: [TeamIsSuccessful\n                        ]\n                    },\n                    [TeamRemoveMember]: { // TODO\n                        displayName: \"Remove Member\",\n                        description: \"Removes a member from a Team\",\n                        type: \"delete\",\n                        inputs: [\n                            TeamId,\n                            TeamUserPrincipalName // TODO maybe id ?\n                        ],\n                        requiredInputs: [\n                            TeamId,\n                            TeamUserPrincipalName // TODO maybe id ?\n                        ],\n                        outputs: [\n                            TeamIsSuccessful\n                        ]\n                    },\n                    [TeamUpdate]: {\n                        displayName: \"Update\",\n                        description: \"Updates a Team's settings\",\n                        type: \"update\",\n                        inputs: [TeamId,\n                            TeamMsAllowCreateUpdateChannels,\n                            TeamMsAllowDeleteChannels,\n                            TeamMsAllowAddRemoveApps,\n                            TeamMsAllowCreateUpdateRemoveTabs,\n                            TeamMsAllowCreateUpdateRemoveConnectors,\n                            TeamGsAllowCreateUpdateChannels,\n                            TeamGsAllowDeleteChannels,\n                            TeamMsgAllowUserEditMessages,\n                            TeamMsgAllowUserDeleteMessages,\n                            TeamMsgAllowUserDeleteMessages,\n                            TeamMsgAllowTeamMentions,\n                            TeamMsgAllowChannelMentions,\n                            TeamFsAllowGiphy,\n                            TeamFsAllowStickersAndMemes,\n                            TeamFsAllowCustomMemes\n                        ],\n                        requiredInputs: [TeamId],\n                        outputs: [TeamIsSuccessful\n                        ]\n                    },\n                    [TeamClone]: {\n                        displayName: \"Copy/Clone\",\n                        description: \"Makes a copy of an existing Team\",\n                        type: \"create\",\n                        inputs: [TeamId,\n                            TeamDisplayName,\n                            TeamDescription,\n                            TeamMailNickname\n                        ],\n                        requiredInputs: [TeamId,\n                            TeamDisplayName,\n                            TeamDescription,\n                            TeamMailNickname\n                        ],\n                        outputs: [TeamId,\n                            TeamRequestStatusUrl,\n                            TeamIsSuccessful\n                        ]\n                    },\n                    [TeamAddOwner]: {\n                        displayName: \"Add Owner\",\n                        description: \"Adds an Owner to a Team\",\n                        type: \"execute\",\n                        // parameters: {\n                        //     [TeamAddAsMemberAlso]: {\n                        //         displayName: \"Add as Member Also\",\n                        //         type: \"boolean\"\n                        //     }\n                        // },\n                        inputs: [TeamId,\n                            TeamUserPrincipalName\n                        ],\n                        requiredInputs: [TeamId,\n                            TeamUserPrincipalName\n                        ],\n                        outputs: [\n                            TeamIsSuccessful\n                        ]\n                    },\n                    [TeamList]: {\n                        displayName: \"List\",\n                        description: \"Lists all Teams and groups without Teams\",\n                        type: \"list\",\n                        parameters: {\n                            [TeamDisplayNameStartsWith]: {\n                                displayName: \"Display Name Starts With\",\n                                type: \"string\"\n                            }\n                        },\n                        outputs: [TeamId,\n                            TeamDisplayName,\n                            TeamResourceProvisioningOptions\n                        ]\n                    },\n                    [TeamMyTeamsList]: {\n                        displayName: \"List My Teams\",\n                        description: \"Lists all Teams you belong to\",\n                        type: \"list\",\n                        outputs: [TeamId,\n                            TeamDisplayName,\n                            TeamDescription,\n                            TeamIsArchived\n                        ]\n                    }\n                }\n            },\n            [Channel]: {\n                displayName: \"Channel\",\n                description: \"Channel\",\n                properties: {\n                    [ChannelId]: {\n                        displayName: \"Channel Id\",\n                        description: \"Channel Id\",\n                        type: \"string\"\n                    },\n                    [ChannelDisplayName]: {\n                        displayName: \"Display Name\",\n                        description: \"Display Name\",\n                        type: \"string\"\n                    },\n                    [ChannelDescription]: {\n                        displayName: \"Description\",\n                        description: \"Description\",\n                        type: \"string\"\n                    },\n                    [ChannelEmail]: {\n                        displayName: \"Email\",\n                        description: \"Email\",\n                        type: \"string\"\n                    },\n                    [ChannelWeburl]: {\n                        displayName: \"Web URL\",\n                        description: \"Web URL\",\n                        type: \"string\"\n                    },\n                    [ChannelIsSuccessful]: {\n                        displayName: \"Is Successful\",\n                        description: \"Is Successful\",\n                        type: \"string\"\n                    },\n                    [ChannelTeamId]: {\n                        displayName: \"Team Id\",\n                        description: \"Team Id\",\n                        type: \"string\"\n                    },\n                    [ChannelMessageSubject]: {\n                        displayName: \"Subject\",\n                        description: \"Message Subject\",\n                        type: \"string\"\n                    },\n                    [ChannelMessageId]: {\n                        displayName: \"Message Id\",\n                        description: \"Message Id\",\n                        type: \"string\"\n                    },\n                    [ChannelMessageBody]: {\n                        displayName: \"Body\",\n                        description: \"Message Body\",\n                        type: \"string\"\n                    },\n                    [ChannelMessageIsImportant]: {\n                        displayName: \"Is Important\",\n                        description: \"Message Importance (Normal/High)\",\n                        type: \"boolean\"\n                    }\n                },\n                methods: {\n                    [ChannelGet]: {\n                        displayName: \"Get\",\n                        description: \"Retrieves the details of a Channel\",\n                        type: \"read\",\n                        inputs: [ChannelTeamId,\n                            ChannelId\n                        ],\n                        requiredInputs: [ChannelId,\n                            ChannelTeamId],\n                        outputs: [ChannelId,\n                            ChannelDisplayName,\n                            ChannelDescription,\n                            ChannelEmail,\n                            ChannelWeburl,\n                            ChannelIsSuccessful\n                        ]\n                    },\n                    [ChannelList]: {\n                        displayName: \"List\",\n                        description: \"List the channels in a Team\",\n                        type: \"list\",\n                        inputs: [ChannelTeamId],\n                        requiredInputs: [ChannelTeamId],\n                        outputs: [ChannelId,\n                            ChannelDisplayName,\n                            ChannelDescription,\n                            ChannelEmail\n                        ]\n                    },\n                    [ChannelCreate]: {\n                        displayName: \"Create\",\n                        description: \"Creates a new Channel\",\n                        type: \"create\",\n                        inputs: [ChannelTeamId,\n                            ChannelDisplayName,\n                            ChannelDescription\n                        ],\n                        requiredInputs: [ChannelTeamId,\n                            ChannelDisplayName\n                        ],\n                        outputs: [ChannelId,\n                            ChannelDisplayName,\n                            ChannelDescription,\n                            ChannelEmail,\n                            ChannelWeburl,\n                            ChannelIsSuccessful\n                        ]\n                    },\n                    [ChannelDelete]: {\n                        displayName: \"Delete\",\n                        description: \"Deletes a Channel\",\n                        type: \"delete\",\n                        inputs: [ChannelId,\n                            ChannelTeamId\n                        ],\n                        requiredInputs: [ChannelId,\n                            ChannelTeamId],\n                        outputs: [ChannelIsSuccessful]\n                    },\n                    [ChannelUpdate]: {\n                        displayName: \"Update\",\n                        description: \"Updates a Channel\",\n                        type: \"update\",\n                        inputs: [ChannelTeamId,\n                            ChannelId,\n                            ChannelDisplayName,\n                            ChannelDescription\n                        ],\n                        requiredInputs: [ChannelId,\n                            ChannelTeamId,\n                            ChannelDisplayName,\n                            ChannelDescription],\n                        outputs: [ChannelIsSuccessful]\n                    },\n                    [ChannelSendMessage]: {\n                        displayName: \"Send Message\",\n                        description: \"Sends a Message to a Channel\",\n                        type: \"create\",\n                        inputs: [ChannelTeamId,\n                            ChannelId,\n                            ChannelMessageSubject,\n                            ChannelMessageBody,\n                            ChannelMessageIsImportant\n                        ],\n                        requiredInputs: [ChannelTeamId,\n                            ChannelId,\n                            ChannelMessageBody\n                        ],\n                        outputs: [ChannelIsSuccessful, ChannelMessageId]\n                    },\n                    [ChannelReplyMessage]: {\n                        displayName: \"Reply to a Message\",\n                        description: \"Reply to a Message in a Channel\",\n                        type: \"create\",\n                        inputs: [ChannelTeamId,\n                            ChannelId,\n                            ChannelMessageId,\n                            ChannelMessageBody\n                        ],\n                        requiredInputs: [ChannelTeamId,\n                            ChannelId,\n                            ChannelMessageId,\n                            ChannelMessageBody\n                        ],\n                        outputs: [ChannelIsSuccessful]\n                    }\n                }\n            },\n            [Tab]: {\n                displayName: \"Tab\",\n                description: \"Tab\",\n                properties: {\n                    [TabId]: {\n                        displayName: \"Tab Id\",\n                        description: \"Tab Id\",\n                        type: \"string\"\n                    },\n                    [TabDisplayName]: {\n                        displayName: \"Display Name\",\n                        description: \"Display Name\",\n                        type: \"string\"\n                    },\n                    [TabConfigEntityId]: {\n                        displayName: \"Entity Id\",\n                        description: \"Entity Id\",\n                        type: \"string\"\n                    },\n                    [TabConfigContentUrl]: {\n                        displayName: \"Content URL\",\n                        description: \"Content URL\",\n                        type: \"string\"\n                    },\n                    [TabConfigWebsiteUrl]: {\n                        displayName: \"Website URL\",\n                        description: \"Website URL\",\n                        type: \"string\"\n                    },\n                    [TabConfigRemoveUrl]: {\n                        displayName: \"Remove URL\",\n                        description: \"Remove URL\",\n                        type: \"string\"\n                    },\n                    [TabTeamsAppAppId]: {\n                        displayName: \"App Id\",\n                        description: \"App Id\",\n                        type: \"string\"\n                    },\n                    [TabTeamsAppExternalId]: {\n                        displayName: \"External Id\",\n                        description: \"External Id\",\n                        type: \"string\"\n                    },\n                    [TabTeamsAppAppDisplayName]: {\n                        displayName: \"App Display Name\",\n                        description: \"App Display Name\",\n                        type: \"string\"\n                    },\n                    [TabTeamsAppDistMethod]: {\n                        displayName: \"Distribution Method\",\n                        description: \"Distribution Method\",\n                        type: \"string\"\n                    },\n                    [TabSortOrderIndex]: {\n                        displayName: \"Sort Order Index\",\n                        description: \"Sort Order Index\",\n                        type: \"string\"\n                    },\n                    [TabWeburl]: {\n                        displayName: \"Web URL\",\n                        description: \"Web URL\",\n                        type: \"string\"\n                    },\n                    [TabIsSuccessful]: {\n                        displayName: \"Is Successful\",\n                        description: \"Is Successful\",\n                        type: \"boolean\"\n                    },\n                    [TabTeamId]: {\n                        displayName: \"Team Id\",\n                        description: \"Team Id\",\n                        type: \"string\"\n                    },\n                    [TabChannelId]: {\n                        displayName: \"Channel Id\",\n                        description: \"Channel Id\",\n                        type: \"string\"\n                    }\n                },\n                methods: {\n                    [TabGet]: {\n                        displayName: \"Get\",\n                        description: \"Get the details of a tab.\",\n                        type: \"read\",\n                        inputs: [TabId,\n                            TabTeamId,\n                            TabChannelId\n                        ],\n                        requiredInputs: [TabId,\n                            TabTeamId,\n                            TabChannelId\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabTeamsAppAppId,\n                            TabTeamsAppExternalId,\n                            TabTeamsAppAppDisplayName,\n                            TabTeamsAppDistMethod,\n                            TabSortOrderIndex,\n                            TabWeburl\n                        ]\n                    },\n                    [TabList]: {\n                        displayName: \"List\",\n                        description: \"List tabs\",\n                        type: \"list\",\n                        inputs: [TabTeamId,\n                            TabChannelId\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl\n                        ]\n                    },\n                    [TabCreateWordTab]: {\n                        displayName: \"Create Word tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateExcelTab]: {\n                        displayName: \"Create Excel tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreatePowerPointTab]: {\n                        displayName: \"Create PowerPoint tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreatePdfTab]: {\n                        displayName: \"Create PDF tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateOneNoteTab]: {\n                        displayName: \"Create OneNote tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreatePlannerTab]: {\n                        displayName: \"Create Planner tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateSharePointTab]: {\n                        displayName: \"Create SharePoint tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateMsFormsTab]: {\n                        displayName: \"Create Forms tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateMsStreamTab]: {\n                        displayName: \"Create Stream tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateWebsiteTab]: {\n                        displayName: \"Create Website tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateWikiTab]: {\n                        displayName: \"Create Wiki tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreatePowerBiTab]: {\n                        displayName: \"Create PowerBI tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateDocumentLibraryTab]: {\n                        displayName: \"Create Document tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabCreateCustomTab]: {\n                        displayName: \"Create custom tab\",\n                        type: \"create\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabTeamsAppAppId,\n                            TabDisplayName,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabTeamsAppAppId,\n                            TabDisplayName\n                        ],\n                        outputs: [TabId,\n                            TabDisplayName,\n                            TabWeburl,\n                            TabConfigEntityId,\n                            TabConfigContentUrl,\n                            TabConfigWebsiteUrl,\n                            TabConfigRemoveUrl,\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabDelete]: {\n                        displayName: \"Delete tab\",\n                        type: \"delete\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabId\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabId\n                        ],\n                        outputs: [\n                            TabIsSuccessful\n                        ]\n                    },\n                    [TabUpdate]: {\n                        displayName: \"Update tab\",\n                        type: \"update\",\n                        inputs: [TabTeamId,\n                            TabChannelId,\n                            TabId,\n                            TabDisplayName\n                        ],\n                        requiredInputs: [TabTeamId,\n                            TabChannelId,\n                            TabId\n                        ],\n                        outputs: [TabIsSuccessful]\n                    },\n                }\n            },\n            [App]: {\n                displayName: \"App\",\n                description: \"App\",\n                properties: {\n                    [AppId]: {\n                        displayName: \"App Id\",\n                        description: \"App Id\",\n                        type: \"string\"\n                    },\n                    [AppTeamId]: {\n                        displayName: \"Team Id\",\n                        description: \"Team Id\",\n                        type: \"string\"\n                    },\n                    [AppDisplayName]: {\n                        displayName: \"App Display Name\",\n                        description: \"App Display Name\",\n                        type: \"string\"\n                    },\n                    [AppVersion]: {\n                        displayName: \"version\",\n                        description: \"version\",\n                        type: \"string\"\n                    },\n                    [AppTeamAppDefinitionId]: {\n                        displayName: \"Teams App Definition Id\",\n                        description: \"Teams App Definition Id\",\n                        type: \"string\"\n                    },\n                    [AppTeamsAppId]: {\n                        displayName: \"Teams App Id\",\n                        description: \"Teams App Id\",\n                        type: \"string\"\n                    }\n                },\n                methods: {\n                    [AppList]: {\n                        displayName: \"List installed apps\",\n                        type: \"list\",\n                        inputs: [AppTeamId],\n                        requiredInputs: [AppTeamId],\n                        outputs: [AppId,\n                            AppDisplayName,\n                            AppVersion,\n                            AppTeamAppDefinitionId,\n                            AppTeamsAppId\n                        ]\n                    }\n                }\n            }\n        }\n\n    });\n}\n\n// OnExecute\nonexecute = function ({ objectName, methodName, parameters, properties }) {\n    switch (objectName) {\n        case Team:\n            onexecuteTeam(methodName, parameters, properties);\n            break;\n        case Channel:\n            onexecuteChannel(methodName, parameters, properties);\n            break;\n        case Tab:\n            onexecuteTab(methodName, parameters, properties);\n            break;\n        case App:\n            onexecuteApp(methodName, parameters, properties);\n            break;\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\n    }\n}\n\nfunction onexecuteApp(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\n    switch (methodName) {\n        case AppList:\n            onexecuteInstalledAppList(parameters, properties);\n            break;\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\n    }\n}\n\nfunction onexecuteTeam(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\n    if (properties == null && parameters == null) {\n        //do nothing\n    }\n    else if (properties == null && parameters !== null) {\n        parameters[TeamIsSuccessful] = true;\n    }\n    else {\n        properties[TeamIsSuccessful] = true;\n    }\n    switch (methodName) {\n        case TeamGet:\n            onexecuteTeamGet(parameters, properties);\n            break;\n        case TeamCreate:\n            onexecuteTeamCreate(parameters, properties);\n            break;\n        case TeamAdd:\n            onexecuteTeamAdd(parameters, properties);\n            break;\n        case TeamUpdate:\n            onexecuteTeamUpdate(parameters, properties);\n            break;\n        case TeamList:\n            onexecuteTeamList(parameters, properties);\n            break;\n        case TeamArchive:\n            onexecuteTeamArchive(parameters, properties);\n            break;\n        case TeamUnarchive:\n            onexecuteTeamUnarchive(parameters, properties);\n            break;\n        case TeamAddMember:\n            onexecuteTeamAddMember(parameters, properties);\n            break;\n        case TeamRemoveMember:\n            onexecuteTeamRemoveMember(parameters, properties);\n            break;\n        case TeamClone:\n            onexecuteTeamClone(parameters, properties);\n            break;\n        case TeamAddOwner:\n            onexecuteTeamAddOwner(parameters, properties);\n            break;\n        case TeamMyTeamsList:\n            onexecuteTeamMyTeamsList(parameters, properties);\n            break;\n        case TeamCheckStatus:\n            onexecuteTeamCheckStatus(parameters, properties);\n            break;\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\n    }\n}\n\nfunction onexecuteTab(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\n    if (properties == null && parameters == null) {\n        //do nothing\n    }\n    else if (properties == null && parameters !== null) {\n        parameters[TabIsSuccessful] = true;\n    }\n    else {\n        properties[TabIsSuccessful] = true;\n    }\n    switch (methodName) {\n        case TabGet:\n            onexecuteTabGet(parameters, properties);\n            break;\n        case TabUpdate:\n            onexecuteTabUpdate(parameters, properties);\n            break;\n        case TabList:\n            onexecuteTabList(parameters, properties);\n            break;\n        case TabDelete:\n            onexecuteTabDelete(parameters, properties);\n            break;\n        case TabCreateWordTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateExcelTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreatePowerPointTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreatePdfTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateOneNoteTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreatePlannerTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateSharePointTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateMsFormsTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateMsStreamTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateWebsiteTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateWikiTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreatePowerBiTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateDocumentLibraryTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        case TabCreateCustomTab:\n            onexecuteTabCreate(methodName, parameters, properties);\n            break;\n        default: throw new Error(\"The method \" + methodName + \" is not supported..\");\n    }\n}\n\nfunction onexecuteTeamGet(parameters: SingleRecord, properties: SingleRecord) {\n    properties[TeamIsSuccessful] = true;\n    //properties[TeamId] = properties[TeamId];\n    // Get Group Details By Group ID\n    GetGroupDetailsById(parameters, properties, function (b) {\n        properties[TeamDisplayName] = b.displayName;\n        properties[TeamCreationDate] = b.createdDateTime;\n        properties[TeamDescription] = b.description;\n        properties[TeamEmail] = b.mail;\n        properties[TeamMailEnabled] = b.mailEnabled;\n        properties[TeamMailNickname] = b.mailNickname;\n        //Get Team Details By Group ID\n        GetTeamDetailsByID(parameters, properties, function (c) {\n            properties[TeamWeburl] = c.webUrl;\n            properties[TeamArchiveStatus] = c.isArchived;\n            //Post Results\n            CreateAndReturnTeamObject(parameters, properties);\n        });\n    });\n}\n\nfunction onexecuteTeamCreate(parameters: SingleRecord, properties: SingleRecord) {\n    // Create a Group, then add a team\n    properties[TeamIsSuccessful] = true;\n    CreateGroup(parameters, properties, function (a) {\n        //properties[TeamId] = parameters[TeamId] = a.id;\n        properties[TeamId] = a.id;\n        properties[TeamCreationDate] = a.createdDateTime;\n        properties[TeamDescription] = a.description;\n        properties[TeamDisplayName] = a.displayName;\n        properties[TeamEmail] = a.mail;\n        properties[TeamMailEnabled] = a.mailEnabled;\n        properties[TeamMailNickname] = a.mailNickname;\n        //Create a Team under the above Group\n        CreateTeam(parameters, properties, function (b) {\n            properties[TeamWeburl] = b.webUrl;\n            //Get User\n            // GetUser(parameters, properties, function (c) {\n            //     parameters[TeamUserId] = c.id;\n            //     //Add Group Owner\n            //     AddGroupOwner(parameters, properties, function (d) {\n            //         //Add Members to the Group\n            //         AddGroupMembers(parameters, properties, function (d) {\n            //             //Post Results\n            CreateAndReturnTeamObject(parameters, properties);\n            //         });\n            //     });\n            // });\n        });\n    });\n}\n\nfunction GetGroupIdByMailNickName(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var component = encodeURIComponent(`?$filter=mailNickName&q='${properties[TeamMailNickname]}'`);\n    var url = baseUriEndpoint + \"/groups\" + component;\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction GetGroupDetailsById(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let teamId = properties[TeamId];\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId);\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction GetTeamDetailsByID(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let teamId = properties[TeamId];\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId);\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction CreateGroup(parameters: SingleRecord, properties: SingleRecord, cb) {\n    //Create Body for GROUP POST\n    var data = JSON.stringify({\n        \"description\": properties[TeamDescription],\n        \"displayName\": properties[TeamDisplayName],\n        \"groupTypes\": [\"Unified\"],\n        \"mailEnabled\": properties[TeamMailEnabled],\n        \"mailNickname\": properties[TeamMailNickname],\n        \"visibility\": \"Private\",\n        \"securityEnabled\": false\n    });\n    var url = baseUriEndpoint + \"/groups/\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction CreateTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\n    // var data = JSON.stringify({\n    //     \"memberSettings\": {\n    //         \"allowCreateUpdateChannels\": true\n    //     },\n    //     \"messagingSettings\": {\n    //         \"allowUserEditMessages\": true,\n    //         \"allowUserDeleteMessages\": true\n    //     },\n    //     \"funSettings\": {\n    //         \"allowGiphy\": true,\n    //         \"giphyContentRating\": \"strict\"\n    //     }\n    // });\n    var data = JSON.stringify({});\n    var url = baseUriEndpoint + \"/groups/\" + properties[TeamId] + \"/team\";\n    ExecuteRequest(url, data, \"PUT\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction ArchiveTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = JSON.stringify({\n        \"shouldSetSpoSiteReadOnlyForMembers\": true\n    });\n\n    let teamId = properties[TeamId];\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/archive\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction UnarchiveTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = null;\n\n    let teamId = properties[TeamId];\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/unarchive\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction UpdateTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\n    //TODO - define properties that has to be updated\n    var data = JSON.stringify({\n        \"memberSettings\": {\n            \"allowCreateUpdateChannels\": properties[TeamMsAllowCreateUpdateChannels],\n            \"allowDeleteChannels\": properties[TeamMsAllowDeleteChannels],\n            \"allowAddRemoveApps\": properties[TeamMsAllowAddRemoveApps],\n            \"allowCreateUpdateRemoveTabs\": properties[TeamMsAllowCreateUpdateRemoveTabs],\n            \"allowCreateUpdateRemoveConnectors\": properties[TeamMsAllowCreateUpdateRemoveConnectors]\n        },\n        \"guestSettings\": {\n            \"allowCreateUpdateChannels\": properties[TeamGsAllowCreateUpdateChannels],\n            \"allowDeleteChannels\": properties[TeamGsAllowDeleteChannels]\n        },\n        \"messagingSettings\": {\n            \"allowUserEditMessages\": properties[TeamMsgAllowUserEditMessages],\n            \"allowUserDeleteMessages\": properties[TeamMsgAllowUserDeleteMessages],\n            \"allowOwnerDeleteMessages\": properties[TeamMsgAllowUserDeleteMessages],\n            \"allowTeamMentions\": properties[TeamMsgAllowTeamMentions],\n            \"allowChannelMentions\": properties[TeamMsgAllowChannelMentions]\n        },\n        \"funSettings\": {\n            \"allowGiphy\": properties[TeamFsAllowGiphy],\n            \"allowStickersAndMemes\": properties[TeamFsAllowStickersAndMemes],\n            \"allowCustomMemes\": properties[TeamFsAllowCustomMemes]\n        }\n    });\n    var url = baseUriEndpoint + \"/teams/\" + properties[TeamId];\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction CloneTeam(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = JSON.stringify({\n        \"displayName\": properties[TeamDisplayName],\n        \"description\": properties[TeamDescription],\n        \"mailNickname\": properties[TeamMailNickname],\n        \"partsToClone\": \"apps,tabs,settings,channels,members\",\n        \"visibility\": \"public\"\n    });\n\n    let teamId = properties[TeamId];\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(teamId) + \"/clone\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction GetUser(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let teamUserPrincipalName = properties[TeamUserPrincipalName];\n    if (!(typeof teamUserPrincipalName === \"string\")) throw new Error(\"properties[TeamUserPrincipalName] is not of type string\");\n\n    var url = baseUriEndpoint + \"/users/\" + encodeURIComponent(teamUserPrincipalName);\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction AddGroupOwner(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = JSON.stringify({\n        \"@odata.id\": baseUriEndpoint + \"/users/\" + properties[TeamUserId]\n    });\n\n    let teamId = properties[TeamId];\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/owners/$ref\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction AddGroupMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = JSON.stringify({\n        \"@odata.id\": baseUriEndpoint + \"/directoryObjects/\" + properties[TeamUserId]\n    });\n\n    let teamId = properties[TeamId];\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/members/$ref\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\n// DELETE /groups/{id}/members/{id}/$ref\nfunction RemoveGroupMembers(parameters: SingleRecord, properties: SingleRecord, cb) {\n    // var data = JSON.stringify({\n    //     \"@odata.id\": baseUriEndpoint + \"/directoryObjects/\" + parameters[TeamUserId]\n    // });\n\n    let teamId = properties[TeamId];\n    if (!(typeof teamId === \"string\")) throw new Error(\"properties[TeamId] is not of type string\");\n\n    let teamUserId = properties[TeamUserId];\n    if (!(typeof teamUserId === \"string\")) throw new Error(\"properties[TeamUserId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/groups/\" + encodeURIComponent(teamId) + \"/members/\" + encodeURIComponent(teamUserId) + \"/$ref\";\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction ExecuteRequest(url: string, data: string, requestType: string, cb) {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState !== 4)\n            return;\n        if (xhr.status == 201) {\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\n            var obj = JSON.parse(xhr.responseText);\n            if (typeof cb === 'function')\n                cb(obj);\n        }\n        else if (xhr.status == 204) {\n            if (typeof cb === 'function')\n                cb(xhr.responseText);\n        }\n        else if (xhr.status == 200) {\n            var obj = JSON.parse(xhr.responseText);\n            //console.log(\"ExecuteRequest XHR status: \" + xhr.status + \",\" + xhr.responseText);\n            //console.log(\"ExecuteRequest cb type of: \" + (typeof cb).toString());\n            if (typeof cb === 'function')\n                cb(obj);\n        }\n        else if (xhr.status == 202) {\n            if (typeof cb === 'function')\n                cb(null);\n        }\n        else if (xhr.status == 400) {\n            // This is a bad request, return error to UI\n            var obj = JSON.parse(xhr.responseText);\n            throw new Error(obj.error.code + \": \" + obj.error.message);\n        }\n        else if (xhr.status == 404) {\n            var obj = JSON.parse(xhr.responseText);\n            // This is to supress an error that happens with team archive/unarchive\n            var errorMessage = obj.error.message;\n            if (errorMessage.startswith == \"No Team found with Group id\") {\n                // do nothing - supress error\n            }\n            else {\n                throw new Error(obj.error.code + \": \" + obj.error.message);\n            }\n            //console.log(\"MSTeamsConnector ExecuteRequest: Failed with 404 error.\");\n            //throw new Error(obj.error.code + \" error: \" + obj.error.message);\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\n        }\n        else {\n            postResult({\n                //TeamIsSuccessful: false\n            });\n            var obj = JSON.parse(xhr.responseText);\n            throw new Error(obj.error.code + \": \" + obj.error.message);\n            //console.log(\"Failed with status \" + xhr.status + \" \" + xhr.responseText);\n\n        }\n    };\n    console.log(\"MSTeamsConnector ExecuteRequest: \" + url);\n    xhr.open(requestType.toUpperCase(), url);\n    // Authentication Header\n    xhr.withCredentials = true;\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    if (requestType.toUpperCase() == \"PUT\" || requestType.toUpperCase() == \"POST\" || requestType.toUpperCase() == \"PATCH\") {\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    }\n    xhr.send(data);\n}\n\nfunction CreateAndReturnTeamObject(parameters: SingleRecord, properties: SingleRecord) {\n    postResult({\n        [TeamId]: properties[TeamId],\n        [TeamDisplayName]: properties[TeamDisplayName],\n        [TeamCreationDate]: properties[TeamCreationDate],\n        [TeamDescription]: properties[TeamDescription],\n        [TeamEmail]: properties[TeamEmail],\n        [TeamMailEnabled]: properties[TeamMailEnabled],\n        [TeamMailNickname]: properties[TeamMailNickname],\n        [TeamWeburl]: properties[TeamWeburl],\n        [TeamArchiveStatus]: properties[TeamArchiveStatus],\n        [TeamIsSuccessful]: properties[TeamIsSuccessful]\n    });\n}\n\nfunction onexecuteTeamAdd(parameters: SingleRecord, properties: SingleRecord) {\n    //TODO - Should we make a call to Get Group Details by ID to get the team object details - for returning back to K2 user\n    // Add Team to a group\n    CreateTeam(parameters, properties, function (b) {\n        properties[TeamWeburl] = b.webUrl;\n        // Get user\n        GetUser(parameters, properties, function (c) {\n            properties[TeamUserId] = c.id;\n            // Add Owner\n            AddGroupOwner(parameters, properties, function (d) {\n                // Add Owner As Member\n                AddGroupMembers(parameters, properties, function (e) {\n                    //Return Team Object\n                    CreateAndReturnTeamObject(parameters, properties);\n                });\n            });\n        });\n    });\n}\n\nfunction onexecuteTeamUpdate(parameters: SingleRecord, properties: SingleRecord) {\n    UpdateTeam(parameters, properties, function (c) {\n        if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\n            postResult({\n                [TeamIsSuccessful]: true\n            });\n        }\n        //CreateAndReturnTeamObject(parameters, properties);\n    });\n}\n\nfunction onexecuteTeamMyTeamsList(parameters: SingleRecord, properties: SingleRecord) {\n    GetMyTeams(parameters, properties, function (a) {\n        //console.log(a);\n        postResult(a.value.map(x => {\n            return {\n                [TeamId]: x.id,\n                [TeamDisplayName]: x.displayName,\n                [TeamDescription]: x.description,\n                [TeamIsArchived]: x.isArchived\n            };\n        }));\n    });\n}\n\nfunction onexecuteTeamList(parameters: SingleRecord, properties: SingleRecord) {\n    GetTeams(parameters, properties, function (a) {\n        postResult(a.value.map(x => {\n            return {\n                [TeamId]: x.id,\n                [TeamDisplayName]: x.displayName,\n                [TeamResourceProvisioningOptions]: x.resourceProvisioningOptions[0]\n            };\n        }));\n    });\n}\n\nfunction GetTeams(parameters: SingleRecord, properties: SingleRecord, cb) {\n    if (parameters[TeamDisplayNameStartsWith] == null || parameters[TeamDisplayNameStartsWith] == \"\") {\n        let component = \"?$select=id,displayName,resourceProvisioningOptions\";\n        var url = baseUriEndpoint + \"/groups\" + component;\n    }\n    else {\n        let teamDisplayNameStartsWith = parameters[TeamDisplayNameStartsWith];\n        if (!(typeof teamDisplayNameStartsWith === \"string\")) throw new Error(\"parameters[TeamDisplayNameStartsWith] is not of type string\");\n\n        let component = \"?$filter=startswith(displayName, '\" + encodeURIComponent(teamDisplayNameStartsWith) + \"')&$select=id,displayName,resourceProvisioningOptions\";\n        var url = baseUriEndpoint + \"/groups\" + component;\n    }\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction GetMyTeams(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var url = baseUriEndpoint + \"/me/joinedTeams\";\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction onexecuteTeamArchive(parameters: SingleRecord, properties: SingleRecord) {\n    ArchiveTeam(parameters, properties, function (b) {\n        // CreateAndReturnTeamObject(parameters, properties);\n        postResult({\n            [TeamId]: properties[TeamId],\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\n        });\n    });\n}\n\nfunction onexecuteTeamUnarchive(parameters: SingleRecord, properties: SingleRecord) {\n    UnarchiveTeam(parameters, properties, function (b) {\n        CreateAndReturnTeamObject(parameters, properties);\n        postResult({\n            [TeamId]: properties[TeamId],\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\n        });\n    });\n}\n\nfunction CheckArchivalStatus(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = null;\n\n    let teamArchiveOperationUrl = parameters[TeamArchiveOperationUrl];\n    if (!(typeof teamArchiveOperationUrl === \"string\")) throw new Error(\"parameters[TeamArchiveOperationUrl] is not of type string\");\n\n    var url = baseUriEndpoint + \"/\" + encodeURIComponent(teamArchiveOperationUrl);\n    ExecuteRequest(url, data, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction onexecuteTeamCheckStatus(parameters: SingleRecord, properties: SingleRecord) {\n    CheckArchivalStatus(parameters, properties, function (b) {\n        postResult({\n            [TeamOperationId]: b.id,\n            [TeamOperationType]: b.operationType,\n            [TeamCreationDate]: b.createdDateTime,\n            [TeamArchiveStatus]: b.status,\n            [TeamLastActionDate]: b.lastActionDateTime,\n            [TeamAttemptsCount]: b.attemptsCount,\n            [TeamTargetResourceId]: b.targetResourceId,\n            [TeamTargetResourceLocation]: b.targetResourceLocation,\n            [TeamArchiveError]: b.error\n        });\n    });\n}\n\nfunction onexecuteTeamClone(parameters: SingleRecord, properties: SingleRecord) {\n    CloneTeam(parameters, properties, function (b) {\n        //CreateAndReturnTeamObject(parameters, properties);\n        postResult({\n            [TeamId]: properties[TeamId],\n            [TeamRequestStatusUrl]: properties[TeamRequestStatusUrl],\n            [TeamIsSuccessful]: properties[TeamIsSuccessful]\n        });\n    });\n}\n\nfunction onexecuteChannel(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\n    if (properties == null && parameters == null) {\n        //do nothing\n    }\n    else if (properties == null && parameters !== null) {\n        parameters[ChannelIsSuccessful] = true;\n    }\n    else {\n        properties[ChannelIsSuccessful] = true;\n    }\n    switch (methodName) {\n        case ChannelGet:\n            onexecuteChannelGet(parameters, properties);\n            break;\n        case ChannelList:\n            onexecuteChannelList(parameters, properties);\n            break;\n        case ChannelCreate:\n            onexecuteChannelCreate(parameters, properties);\n            break;\n        case ChannelDelete:\n            onexecuteChannelDelete(parameters, properties);\n            break;\n        case ChannelUpdate:\n            onexecuteChannelUpdate(parameters, properties);\n            break;\n        case ChannelSendMessage:\n            onexecuteSendMessage(parameters, properties);\n            break;\n        case ChannelReplyMessage:\n            onexecuteReplyMessage(parameters, properties);\n            break;\n        default: throw new Error(\"The channel method \" + methodName + \" is not supported...\");\n    }\n}\n\nfunction onexecuteTeamAddMember(parameters: SingleRecord, properties: SingleRecord) {\n    GetUser(parameters, properties, function (b) {\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\n        properties[TeamUserId] = b.id;\n        AddGroupMembers(parameters, properties, function (c) {\n            //ToDO - remove the if condition and handle in try catch block\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\n                postResult({\n                    [TeamIsSuccessful]: true\n                });\n            }\n        });\n    });\n}\n\nfunction onexecuteTeamRemoveMember(parameters: SingleRecord, properties: SingleRecord) {\n    GetUser(parameters, properties, function (b) {\n        properties[TeamUserId] = b.id;\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\n        RemoveGroupMembers(parameters, properties, function (c) {\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\n                postResult({\n                    [TeamIsSuccessful]: true\n                });\n            }\n        });\n    });\n}\n\nfunction onexecuteTeamAddOwner(parameters: SingleRecord, properties: SingleRecord) {\n    GetUser(parameters, properties, function (b) {\n        properties[TeamUserId] = b.id;\n        properties[TeamUserPrincipalName] = b.userPrincipalName;\n        AddGroupOwner(parameters, properties, function (c) {\n            // console.log(\"**after AddGroupOwner\" + c.id + \",\" + c.userPrincipalName);\n            // var stringValue = String(parameters[TeamAddAsMemberAlso]);\n            // var boolValue = stringValue.toLowerCase() == 'true' ? true : false;\n            // console.log(boolValue);\n            // if (boolValue) {\n            //     AddGroupMembers(parameters, properties, function (d) {\n            //         if (d.responseText == null || d.responseText == \"\" || d.responseText == undefined || d.responseText == \"undefined\") {\n            //             postResult({\n            //                 [TeamIsSuccessful]: true\n            //             });\n            //         }\n            //     });\n            // }\n            // else {\n            if (c.responseText == null || c.responseText == \"\" || c.responseText == undefined || c.responseText == \"undefined\") {\n                postResult({\n                    [TeamIsSuccessful]: true\n                });\n            }\n        });\n    });\n}\n\nfunction onexecuteChannelGet(parameters: SingleRecord, properties: SingleRecord) {\n    properties[ChannelIsSuccessful] = true;\n    GetChannel(parameters, properties, function (a) {\n        properties[ChannelId] = a.id,\n            properties[ChannelDisplayName] = a.displayName,\n            properties[ChannelDescription] = a.description,\n            properties[ChannelEmail] = a.email,\n            properties[ChannelWeburl] = a.webUrl\n        //Post Results\n        CreateAndReturnChannelObject(parameters, properties);\n    });\n}\n\nfunction onexecuteChannelList(parameters: SingleRecord, properties: SingleRecord) {\n    GetChannelList(parameters, properties, function (a) {\n        postResult(a.value.map(x => {\n            return {\n                [ChannelId]: x.id,\n                [ChannelDisplayName]: x.displayName,\n                [ChannelDescription]: x.description,\n                [ChannelEmail]: x.email\n            };\n        }));\n    });\n}\n\nfunction onexecuteChannelCreate(parameters: SingleRecord, properties: SingleRecord) {\n    CreateChannel(parameters, properties, function (a) {\n        properties[ChannelId] = a.id;\n        properties[ChannelDisplayName] = a.displayName;\n        properties[ChannelDescription] = a.description;\n        properties[ChannelEmail] = a.email;\n        properties[ChannelWeburl] = a.webUrl;\n        CreateAndReturnChannelObject(parameters, properties);\n    });\n}\n\nfunction onexecuteChannelUpdate(parameters: SingleRecord, properties: SingleRecord) {\n    UpdateChannel(parameters, properties, function (a) {\n        properties[ChannelId] = a.id;\n        properties[ChannelDisplayName] = a.displayName;\n        properties[ChannelDescription] = a.description;\n        properties[ChannelEmail] = a.email;\n        properties[ChannelWeburl] = a.webUrl;\n        // CreateAndReturnChannelObject(parameters, properties);\n        postResult({\n            [ChannelIsSuccessful]: true\n        });\n    });\n}\n\nfunction onexecuteChannelDelete(parameters: SingleRecord, properties: SingleRecord) {\n    DeleteChannel(parameters, properties, function (a) {\n        postResult({\n            [ChannelIsSuccessful]: true\n        });\n    });\n}\n\nfunction DeleteChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let channelTeamId = properties[ChannelTeamId];\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\n\n    let channelId = properties[ChannelId];\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction CreateChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = JSON.stringify({\n        \"displayName\": properties[ChannelDisplayName],\n        \"description\": properties[ChannelDescription],\n    });\n\n    let channelTeamId = properties[ChannelTeamId];\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction CreateAndReturnChannelObject(parameters: SingleRecord, properties: SingleRecord) {\n    //var ChannelId = String(properties[ChannelId]);\n    // if (ChannelId == null || ChannelId == \"undefined\" || ChannelId == \"\" || ChannelId == undefined)\n    //     parameters[ChannelId] = properties[ChannelId];\n    postResult({\n        [ChannelId]: properties[ChannelId],\n        [ChannelDisplayName]: properties[ChannelDisplayName],\n        [ChannelDescription]: properties[ChannelDescription],\n        [ChannelEmail]: properties[ChannelEmail],\n        [ChannelWeburl]: properties[ChannelWeburl],\n        [ChannelIsSuccessful]: properties[ChannelIsSuccessful]\n    });\n}\n\nfunction GetChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let channelTeamId = properties[ChannelTeamId];\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\n\n    let channelId = properties[ChannelId];\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction GetChannelList(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let channelTeamId = properties[ChannelTeamId];\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels?$select=id, displayname, description, email\";\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction UpdateChannel(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = JSON.stringify({\n        \"displayName\": properties[ChannelDisplayName],\n        \"description\": properties[ChannelDescription]\n        //\"email\": \"test@k2rocks.com\" TODO: Pass the correct parameter here\n    });\n\n    let channelTeamId = properties[ChannelTeamId];\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\n\n    let channelId = properties[ChannelId];\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId);\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction onexecuteSendMessage(parameters: SingleRecord, properties: SingleRecord) {\n    SendMessage(parameters, properties, function (a) {\n        postResult({\n            [ChannelIsSuccessful]: true,\n            [ChannelMessageId]: a.id\n        });\n    });\n}\n\nfunction SendMessage(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var importance = properties[ChannelMessageIsImportant] == \"true\" ? \"High\" : \"Normal\";\n    var data = JSON.stringify({\n        \"subject\": properties[ChannelMessageSubject],\n        \"importance\": importance.toString(),\n        \"body\": {\n            \"contentType\": \"html\",\n            \"content\": properties[ChannelMessageBody]\n        }\n    });\n\n    let channelTeamId = properties[ChannelTeamId];\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\n\n    let channelId = properties[ChannelId];\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\n\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction onexecuteReplyMessage(parameters: SingleRecord, properties: SingleRecord) {\n    ReplyMessage(parameters, properties, function (a) {\n        postResult({\n            [ChannelIsSuccessful]: true\n        });\n    });\n}\n\nfunction ReplyMessage(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = JSON.stringify({\n        \"body\": {\n            \"contentType\": \"html\",\n            \"content\": properties[ChannelMessageBody]\n        }\n    });\n\n    let channelTeamId = properties[ChannelTeamId];\n    if (!(typeof channelTeamId === \"string\")) throw new Error(\"properties[ChannelTeamId] is not of type string\");\n\n    let channelId = properties[ChannelId];\n    if (!(typeof channelId === \"string\")) throw new Error(\"properties[ChannelId] is not of type string\");\n\n    let channelMessageId = properties[ChannelMessageId];\n    if (!(typeof channelMessageId === \"string\")) throw new Error(\"properties[ChannelMessageId] is not of type string\");\n\n    var url = baseUriEndpointBeta + \"/teams/\" + encodeURIComponent(channelTeamId) + \"/channels/\" + encodeURIComponent(channelId) + \"/messages/\" + + encodeURIComponent(channelMessageId) + \"/replies\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction onexecuteTabGet(parameters: SingleRecord, properties: SingleRecord) {\n    GetTabInformation(parameters, properties, function (a) {\n        postResult({\n            [TabId]: a.id,\n            [TabDisplayName]: a.displayName,\n            [TabConfigEntityId]: a.configuration.entityId,\n            [TabConfigContentUrl]: a.configuration.contentUrl,\n            [TabConfigWebsiteUrl]: a.configuration.websiteUrl,\n            [TabConfigRemoveUrl]: a.configuration.removeUrl,\n            [TabTeamsAppAppId]: a.teamsApp.id,\n            [TabTeamsAppExternalId]: a.teamsApp.externalId,\n            [TabTeamsAppAppDisplayName]: a.teamsApp.displayName,\n            [TabTeamsAppDistMethod]: a.teamsApp.distributionMethod,\n            [TabSortOrderIndex]: a.sortOrderIndex,\n            [TabWeburl]: a.webUrl\n        });\n    });\n}\n\nfunction GetTabInformation(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let tabTeamId = properties[TabTeamId];\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\n\n    let tabChannelId = properties[TabChannelId];\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\n\n    let tabId = properties[TabId];\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId) + \"?$expand=teamsApp\";\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction onexecuteTabUpdate(parameters: SingleRecord, properties: SingleRecord) {\n    UpdateTab(parameters, properties, function (a) {\n        postResult({\n            [TabIsSuccessful]: true\n        });\n    });\n}\n\nfunction UpdateTab(parameters: SingleRecord, properties: SingleRecord, cb) {\n    var data = JSON.stringify({\n        \"displayName\": properties[TabDisplayName]\n    });\n\n    let tabTeamId = properties[TabTeamId];\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\n\n    let tabChannelId = properties[TabChannelId];\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\n\n    let tabId = properties[TabId];\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId);\n    ExecuteRequest(url, data, \"PATCH\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction onexecuteTabList(parameters: SingleRecord, properties: SingleRecord) {\n    GetTabList(parameters, properties, function (a) {\n        postResult(a.value.map(x => {\n            return {\n                [TabId]: x.id,\n                [TabDisplayName]: x.displayName,\n                [TabWeburl]: x.webUrl\n            };\n        }));\n    });\n}\n\nfunction onexecuteTabCreate(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\n    switch (methodName) {\n        case TabCreateWordTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Word\", properties));\n            break;\n        case TabCreateExcelTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Excel\", properties));\n            break;\n        case TabCreatePowerPointTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PowerPoint\", properties));\n            break;\n        case TabCreatePdfTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PDF\", properties));\n            break;\n        case TabCreateOneNoteTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"OneNote\", properties));\n            break;\n        case TabCreatePlannerTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Planner\", properties));\n            break;\n        case TabCreateSharePointTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"SharePoint\", properties));\n            break;\n        case TabCreateMsFormsTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"MicrosoftForms\", properties));\n            break;\n        case TabCreateMsStreamTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"MicrosoftStream\", properties));\n            break;\n        case TabCreateWebsiteTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Website\", properties));\n            break;\n        case TabCreateWikiTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Wiki\", properties));\n            break;\n        case TabCreatePowerBiTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"PowerBI\", properties));\n            break;\n        case TabCreateDocumentLibraryTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"DocumentLibrary\", properties));\n            break;\n        case TabCreateCustomTab:\n            prepareDataAndCreateTab(parameters, properties, getRequestBody(\"Custom\", properties));\n            break;\n        default: throw new Error(\"The object \" + methodName + \" is not supported.\");\n    }\n}\n\n\nfunction prepareDataAndCreateTab(parameters: SingleRecord, properties: SingleRecord, requestBody: string) {\n    CreateTab(parameters, properties, requestBody, function (a) {\n        // CreateAndReturnChannelObject(parameters, properties);\n        postResult({\n            [TabId]: a.id,\n            [TabDisplayName]: a.displayName,\n            [TabWeburl]: a.webUrl,\n            [TabConfigEntityId]: a.configuration.entityId,\n            [TabConfigContentUrl]: a.configuration.contentUrl,\n            [TabConfigWebsiteUrl]: a.configuration.websiteUrl,\n            [TabConfigRemoveUrl]: a.configuration.removeUrl,\n            [TabIsSuccessful]: true\n        });\n    });\n}\n\nfunction CreateTab(parameters: SingleRecord, properties: SingleRecord, data: string, cb) {\n    let tabTeamId = properties[TabTeamId];\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\n\n    let tabChannelId = properties[TabChannelId];\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/channels/\" + encodeURIComponent(tabChannelId) + \"/tabs\";\n    ExecuteRequest(url, data, \"POST\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\nfunction getRequestBody(tabType: string, properties) {\n    var data;\n    switch (tabType) {\n        case \"Word\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.word\"\n            });\n            break;\n        case \"Excel\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.excel\"\n            });\n            break;\n        case \"Powerpoint\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.powerpoint\"\n            });\n            break;\n        case \"PDF\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.file.staticviewer.pdf\"\n            });\n            break;\n        case \"OneNote\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/0d820ecd-def2-4297-adad-78056cde7c78\"\n            });\n            break;\n        case \"Planner\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.planner\"\n            });\n            break;\n        case \"SharePoint\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/2a527703-1f6f-4559-a332-d8a7d288cd88\"\n            });\n            break;\n        case \"MicrosoftForms\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/81fef3a6-72aa-4648-a763-de824aeafb7d\"\n            });\n            break;\n        case \"MicrosoftStream\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoftstream.embed.skypeteamstab\"\n            });\n            break;\n        case \"Website\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.web\"\n            });\n            break;\n        case \"Wiki\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.wiki\"\n            });\n            break;\n        case \"PowerBI\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.powerbi\"\n            });\n            break;\n        case \"DocumentLibrary\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/com.microsoft.teamspace.tab.files.sharepoint\"\n            });\n            break;\n        case \"Custom\":\n            data = JSON.stringify({\n                \"displayName\": properties[TabDisplayName],\n                \"teamsApp@odata.bind\": \"https://graph.microsoft.com/v1.0/appCatalogs/teamsApps/\" + properties[TabTeamsAppAppId]\n            });\n            break;\n        default: throw new Error(\"Tab Type is not supported or app is not installed!\");\n    }\n    return data;\n}\n\nfunction onexecuteTabDelete(parameters: SingleRecord, properties: SingleRecord) {\n    DeleteTab(parameters, properties, function (a) {\n        if (a == null || a == \"\") {\n            postResult({\n                [TabIsSuccessful]: true\n            });\n        }\n    });\n}\n\nfunction DeleteTab(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let tabTeamId = properties[TabTeamId];\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\n\n    let tabChannelId = properties[TabChannelId];\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\n\n    let tabId = properties[TabId];\n    if (!(typeof tabId === \"string\")) throw new Error(\"properties[TabId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/Channels/\" + encodeURIComponent(tabChannelId) + \"/tabs/\" + encodeURIComponent(tabId);\n    ExecuteRequest(url, null, \"DELETE\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\n\nfunction GetInstalledAppList(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let appTeamId = properties[AppTeamId];\n    if (!(typeof appTeamId === \"string\")) throw new Error(\"properties[AppTeamId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(appTeamId) + \"/installedApps?$expand=teamsAppDefinition\";\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}\n\n\nfunction onexecuteInstalledAppList(parameters: SingleRecord, properties: SingleRecord) {\n    GetInstalledAppList(parameters, properties, function (a) {\n        postResult(a.value.map(x => {\n            return {\n                [AppId]: x.id,\n                [AppDisplayName]: x.teamsAppDefinition.displayName,\n                [AppVersion]: x.teamsAppDefinition.version,\n                [AppTeamAppDefinitionId]: x.teamsAppDefinition.id,\n                [AppTeamsAppId]: x.teamsAppDefinition.teamsAppId\n            };\n        }));\n    });\n}\n\nfunction GetTabList(parameters: SingleRecord, properties: SingleRecord, cb) {\n    let tabTeamId = properties[TabTeamId];\n    if (!(typeof tabTeamId === \"string\")) throw new Error(\"properties[TabTeamId] is not of type string\");\n\n    let tabChannelId = properties[TabChannelId];\n    if (!(typeof tabChannelId === \"string\")) throw new Error(\"properties[TabChannelId] is not of type string\");\n\n    var url = baseUriEndpoint + \"/teams/\" + encodeURIComponent(tabTeamId) + \"/channels/\" + encodeURIComponent(tabChannelId) + \"/tabs?$select=id,displayName,webUrl\";\n    ExecuteRequest(url, null, \"GET\", function (responseText) {\n        if (typeof cb === 'function')\n            cb(responseText);\n    });\n}"],"names":["metadata","systemName","displayName","description","baseUriEndpoint","CreateTeam","parameters","properties","cb","data","JSON","stringify","ExecuteRequest","responseText","GetUser","teamUserPrincipalName","Error","encodeURIComponent","AddGroupOwner","@odata.id","teamId","AddGroupMembers","url","requestType","xhr","XMLHttpRequest","onreadystatechange","readyState","status","obj","parse","error","code","message","postResult","startswith","console","log","open","toUpperCase","withCredentials","setRequestHeader","send","CreateAndReturnTeamObject","id","creationDate","email","mailEnabled","mailNickname","weburl","archiveStatus","isSuccessful","CreateAndReturnChannelObject","onexecuteTabCreate","methodName","prepareDataAndCreateTab","getRequestBody","requestBody","tabTeamId","tabChannelId","CreateTab","a","webUrl","configEntityId","configuration","entityId","configContentUrl","contentUrl","configWebsiteUrl","websiteUrl","configRemoveUrl","removeUrl","tabType","teamsApp@odata.bind","ondescribe","postSchema","objects","team","type","operationId","operationType","lastActionDate","attemptsCount","targetResourceId","targetResourceLocation","archiveError","userPrincipalName","resourceProvisioningOptions","isArchived","requestStatusUrl","msAllowCreateUpdateChannels","msAllowDeleteChannels","msAllowAddRemoveApps","msAllowCreateUpdateRemoveTabs","msAllowCreateUpdateRemoveConnectors","gsAllowCreateUpdateChannels","gsAllowDeleteChannels","msgsAllowUserEditMessages","msgsAllowUserDeleteMessages","msgsAllowOwnerDeleteMessages","msgsAllowTeamMentions","msgsAllowChannelMentions","fsAllowGiphy","fsAllowStickersAndMemes","fsAllowCustomMemes","methods","get","inputs","requiredInputs","outputs","create","archive","unarchive","addMember","removeMember","update","clone","addOwner","list","displayNameStartsWith","myTeamsList","channel","messageSubject","messageId","messageBody","messageIsImportant","delete","sendMessage","replyMessage","tab","teamsAppAppId","teamsAppExternalId","teamsAppAppDisplayName","teamsAppDistMethod","sortOrderIndex","channelId","createWordTab","createExcelTab","createPowerPointTab","createPdfTab","createOneNoteTab","createPlannerTab","createSharePointTab","createMsFormsTab","createStreamTab","createWebsiteTab","createWikiTab","createPowerBiTab","createDocumentLibraryTab","createCustomTab","app","version","teamsAppDefinitionId","teamsAppId","onexecute","objectName","GetGroupDetailsById","b","createdDateTime","mail","GetTeamDetailsByID","c","onexecuteTeamGet","groupTypes","visibility","securityEnabled","CreateGroup","onexecuteTeamCreate","d","e","onexecuteTeamAdd","memberSettings","allowCreateUpdateChannels","allowDeleteChannels","allowAddRemoveApps","allowCreateUpdateRemoveTabs","allowCreateUpdateRemoveConnectors","guestSettings","messagingSettings","allowUserEditMessages","allowUserDeleteMessages","allowOwnerDeleteMessages","allowTeamMentions","allowChannelMentions","funSettings","allowGiphy","allowStickersAndMemes","allowCustomMemes","UpdateTeam","undefined","onexecuteTeamUpdate","teamDisplayNameStartsWith","component","GetTeams","value","map","x","onexecuteTeamList","shouldSetSpoSiteReadOnlyForMembers","ArchiveTeam","onexecuteTeamArchive","UnarchiveTeam","onexecuteTeamUnarchive","onexecuteTeamAddMember","teamUserId","RemoveGroupMembers","onexecuteTeamRemoveMember","partsToClone","CloneTeam","onexecuteTeamClone","onexecuteTeamAddOwner","teamArchiveOperationUrl","CheckArchivalStatus","lastActionDateTime","onexecuteTeamCheckStatus","onexecuteTeam","channelTeamId","GetChannel","onexecuteChannelGet","GetChannelList","onexecuteChannelList","CreateChannel","onexecuteChannelCreate","DeleteChannel","onexecuteChannelDelete","UpdateChannel","onexecuteChannelUpdate","importance","subject","toString","body","contentType","content","baseUriEndpointBeta","SendMessage","onexecuteSendMessage","channelMessageId","ReplyMessage","onexecuteReplyMessage","onexecuteChannel","tabId","GetTabInformation","teamsApp","externalId","distributionMethod","onexecuteTabGet","UpdateTab","onexecuteTabUpdate","GetTabList","onexecuteTabList","DeleteTab","onexecuteTabDelete","onexecuteTab","appTeamId","GetInstalledAppList","teamsAppDefinition","onexecuteInstalledAppList","onexecuteApp"],"mappings":"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"}